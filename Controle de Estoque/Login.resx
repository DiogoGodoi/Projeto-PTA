<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pctLogo.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        T2sA7HkePwAAAABJRU5ErkJggg==
</value>
  </data>
</root>